<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[UNICORN STUDIO GARDEN]]></title>
  <link href="http://kosakasakas.github.io/atom.xml" rel="self"/>
  <link href="http://kosakasakas.github.io/"/>
  <updated>2014-07-20T16:05:51+09:00</updated>
  <id>http://kosakasakas.github.io/</id>
  <author>
    <name><![CDATA[kosakasakas]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Memory Compressor]]></title>
    <link href="http://kosakasakas.github.io/blog/2014/07/20/memorycompressor/"/>
    <updated>2014-07-20T15:21:27+09:00</updated>
    <id>http://kosakasakas.github.io/blog/2014/07/20/memorycompressor</id>
    <content type="html"><![CDATA[<p><img src="http://kosakasakas.github.io/images/unicorn/compressor/00_Frozen.png" alt="Frozen" /></p>

<p>旅行に行ったときに取った写真が1000枚以上あるけど、いちいち見てる時間無いし、結構同じようなアングルの写真もたくさんあるし、ファイル名も日付けしかないから探しつらい。</p>

<p>これなんかうまい事要約して少ない情報にまとめてくれないかなーと思ったので、思い出映像を一枚の画像に圧縮するプログラム書いてみました。</p>

<p>openFrameworks v0.8.2、iOS用のアプリケーションになってます。<br/>
GUIとかは何もしていないので、oFのサンプルと同程度の作りですが、一応GitHubあがってます。</p>

<p><a href="https://github.com/kosakasakas/MemoryCompressor">GitHub &ndash; MemoryCompressor</a></p>

<p>このtop画像はこのプログラムで出力した<strong>アナと雪の女王</strong>の全編の圧縮画像です。<br/>
それっぽい！!</p>

<p>こちらはスペイン旅行に行った時の1000枚の写真の圧縮結果<br/>
あー、ここマドリードの夜だなーとか、バルセロナのビーチだなってのが何となく分かる。
<img src="http://kosakasakas.github.io/images/unicorn/compressor/06_Spain.png" alt="Spanish" /></p>

<p>で、こちらはアーティストの2hくらいのLive映像を圧縮した画像<br/>
照明変化とか、ザイロバンドの発光が混じってて一番きれいにでた。
<img src="http://kosakasakas.github.io/images/unicorn/compressor/03_Live.png" alt="Live" /></p>

<p>これは映画<strong>僕の彼女はサイボーグ</strong>の圧縮画像<br/>
全編使ってます。
<img src="http://kosakasakas.github.io/images/unicorn/compressor/02_CyborgGirl.png" alt="CyborgGirl" /></p>

<p><strong>ナイトメアビフォアクリスマス</strong>の圧縮画像<br/>
思ったよりきれいにでなかった。
<img src="http://kosakasakas.github.io/images/unicorn/compressor/05_NightmareBeforeChristmas.png" alt="NightmareBeforeChristmas" /></p>

<p>まれにおしゃれな画像作れるので、自分の好きな映画とか、思い出映像で出力してみたら楽しいかも。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[EV？スマート自動車？googleが目指す次世代カー]]></title>
    <link href="http://kosakasakas.github.io/blog/2014/07/04/google/"/>
    <updated>2014-07-04T22:29:28+09:00</updated>
    <id>http://kosakasakas.github.io/blog/2014/07/04/google</id>
    <content type="html"><![CDATA[<p><img src="http://kosakasakas.github.io/images/unicorn/google-self-driving-car.jpg" alt="google-car" /></p>

<p>近頃IT企業が相次いで自動車搭載OSの開発に乗り出している。Appleは『CarPlay』と呼ばれるOSを3月に発表したばかりだ。</p>

<p>そんな中、googleも自社開発OSを搭載したプロトタイプ車の発表と試乗会を5月27日に行った。このOSははっきり言ってAppleのそれとは次元が違う。</p>

<p>AppleのCarPlayはいわゆるカーナビの部分をiOSと連動する事で利便化しようというコンセプトから生まれたOSだ。<br/>
iPhoneと連動してオーディオ再生される事はもちろん、Siriを使った音声ルート検索を行うなど、我々にも想像できるザ・未来の自動車を実現しようとしている。</p>

<p>一方のgoogleは我々の想像の遥か先の未来を見据えている。</p>

<p>googleのOSが要求する情報は走行距離や運行情報だけではない。周囲の建物までの距離をレーダーで計測し、街自体の三次元情報を取得しながら走行するのだという。その際の情報処理量は実に毎秒1GBに上る。</p>

<p>この膨大な情報を収集する目的のひとつは、<strong>”完全自動走行”</strong>車の実現だ。</p>

<p>一般的な自動運転技術は車載カメラがとらえた画像から、白線と標識を識別する事で実現する。当然、白線や標識が視覚的に遮蔽された場合に安全な走行を保証する事はできない。googleは街全体を3Dモデルとして提供し、より安全で完全な自動走行を実現しようというのだ。</p>

<p><img src="http://kosakasakas.github.io/images/unicorn/google-self-driving-car-3d.jpg" alt="google-3d" /></p>

<p>先日の基調講演ではカリフォルニア州の街の一部が3Dスキャンされている様子が、無人運転する車の様子と共に公開された。</p>

<p>この三次元空間情報があれば、あらゆるロボットが街を自動で駆け巡る事ができるようになるだろう。その可能性は自動車だけにとどまる事はないはずだ。</p>

<p>（コラム担当：kosakasakas）</p>

<p>参考：<a href="http://gigazine.net/news/20130502-google-self-driving-car/">http://gigazine.net/news/20130502-google-self-driving-car/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[写真レタッチしてみた]]></title>
    <link href="http://kosakasakas.github.io/blog/2014/06/21/xie-zhen-falseretatuti/"/>
    <updated>2014-06-21T23:28:51+09:00</updated>
    <id>http://kosakasakas.github.io/blog/2014/06/21/xie-zhen-falseretatuti</id>
    <content type="html"><![CDATA[<p>Photoshopのフィルタレイヤーでいろいろやってみた結果。<br/>
編集前のオリジナルの画像がこれ</p>

<p><img src="http://kosakasakas.github.io/images/unicorn/bluegirl.JPG" alt="bluegirl" /></p>

<p>空を強調して前景の赤を強くしたのがこれ
<img src="http://kosakasakas.github.io/images/unicorn/bluegirl_white.jpg" alt="bluegirl2" /></p>

<p>空を個人的に好きな感じに調整したのがこれ
<img src="http://kosakasakas.github.io/images/unicorn/bluegirl_magenta.jpg" alt="bluegirl3" /></p>

<p>青に振り切ったのがこれ
<img src="http://kosakasakas.github.io/images/unicorn/bluegirl_magenta4.jpg" alt="bluegirl4" /></p>

<p>どれがいいっすかね.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Unicorn World!]]></title>
    <link href="http://kosakasakas.github.io/blog/2014/06/21/tesuto/"/>
    <updated>2014-06-21T13:10:15+09:00</updated>
    <id>http://kosakasakas.github.io/blog/2014/06/21/tesuto</id>
    <content type="html"><![CDATA[<p><img src="http://kosakasakas.github.io/images/unicorn/unicorn.jpg" alt="lemonade" /></p>

<p>くぽぽぽぽ!!</p>

<p>UNICORN WORKSついに立ち上げました。</p>
]]></content>
  </entry>
  
</feed>
